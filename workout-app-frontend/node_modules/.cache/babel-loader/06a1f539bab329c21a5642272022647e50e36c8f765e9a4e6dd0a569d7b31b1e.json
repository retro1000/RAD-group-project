{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damit\\\\OneDrive\\\\Desktop\\\\workout_plans_web_app\\\\workout-app-frontend\\\\src\\\\components\\\\workoutprogress.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getColorBasedOnPercentage = percentage => {\n  if (percentage >= 75) {\n    return '#FF0000'; // Blue for high percentage\n  } else if (percentage >= 50) {\n    return '#FF5733'; // Orange for medium percentage\n  } else {\n    return '#00CC00'; // Green for low percentage\n  }\n};\n\nconst WorkoutProgress = _ref => {\n  let {\n    percentage\n  } = _ref;\n  const color = getColorBasedOnPercentage(percentage);\n  const remainingColor = '#A9A9A9'; // Color for the remaining portion of the pie chart\n\n  const pieChartStyle = {\n    width: '150px',\n    height: '150px',\n    background: `conic-gradient(${color} 0% ${percentage}%, ${remainingColor} ${percentage}% 100%)`,\n    borderRadius: '50%',\n    position: 'relative'\n  };\n  const textStyle = {\n    position: 'absolute',\n    top: '28%',\n    left: '52%',\n    transform: 'translate(-50%, -50%)',\n    fontSize: '18px',\n    fontWeight: 'bold'\n  };\n  let textColor; // Define a variable to hold the color\n\n  if (percentage >= 75) {\n    textColor = '#FF0000'; // Blue for high percentage\n  } else if (percentage >= 50) {\n    textColor = '#FF5733'; // Orange for medium percentage\n  } else {\n    textColor = '#00CC00'; // Green for low percentage\n  }\n\n  textStyle.color = textColor;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workout-progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart\",\n      style: pieChartStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"percentage\",\n      style: textStyle,\n      children: [\"Progress:\", percentage, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = WorkoutProgress;\nexport default WorkoutProgress;\nvar _c;\n$RefreshReg$(_c, \"WorkoutProgress\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","getColorBasedOnPercentage","percentage","WorkoutProgress","_ref","color","remainingColor","pieChartStyle","width","height","background","borderRadius","position","textStyle","top","left","transform","fontSize","fontWeight","textColor","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/damit/OneDrive/Desktop/workout_plans_web_app/workout-app-frontend/src/components/workoutprogress.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst getColorBasedOnPercentage = (percentage) => {\r\n  if (percentage >= 75) {\r\n    return '#FF0000'; // Blue for high percentage\r\n  } else if (percentage >= 50) {\r\n    return '#FF5733'; // Orange for medium percentage\r\n  } else {\r\n    return '#00CC00'; // Green for low percentage\r\n  }\r\n};\r\n\r\nconst WorkoutProgress = ({ percentage }) => {\r\n  const color = getColorBasedOnPercentage(percentage);\r\n\r\n  const remainingColor = '#A9A9A9'; // Color for the remaining portion of the pie chart\r\n\r\n  const pieChartStyle = {\r\n    width: '150px',\r\n    height: '150px',\r\n    background: `conic-gradient(${color} 0% ${percentage}%, ${remainingColor} ${percentage}% 100%)`,\r\n    borderRadius: '50%',\r\n    position: 'relative',\r\n  };\r\n\r\n  const textStyle = {\r\n    position: 'absolute',\r\n    top: '28%',\r\n    left: '52%',\r\n    transform: 'translate(-50%, -50%)',\r\n    fontSize: '18px',\r\n    fontWeight: 'bold',\r\n  };\r\n  \r\n  let textColor; // Define a variable to hold the color\r\n  \r\n  if (percentage >= 75) {\r\n    textColor = '#FF0000'; // Blue for high percentage\r\n  } else if (percentage >= 50) {\r\n    textColor = '#FF5733'; // Orange for medium percentage\r\n  } else {\r\n    textColor = '#00CC00'; // Green for low percentage\r\n  }\r\n  \r\n  textStyle.color = textColor; \r\n  \r\n  return (\r\n    <div className=\"workout-progress\">\r\n      <div className=\"pie-chart\" style={pieChartStyle}></div>\r\n      <span className=\"percentage\" style={textStyle}>Progress:{percentage}%</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkoutProgress;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,yBAAyB,GAAIC,UAAU,IAAK;EAChD,IAAIA,UAAU,IAAI,EAAE,EAAE;IACpB,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC,MAAM,IAAIA,UAAU,IAAI,EAAE,EAAE;IAC3B,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC,MAAM;IACL,OAAO,SAAS,CAAC,CAAC;EACpB;AACF,CAAC;;AAED,MAAMC,eAAe,GAAGC,IAAA,IAAoB;EAAA,IAAnB;IAAEF;EAAW,CAAC,GAAAE,IAAA;EACrC,MAAMC,KAAK,GAAGJ,yBAAyB,CAACC,UAAU,CAAC;EAEnD,MAAMI,cAAc,GAAG,SAAS,CAAC,CAAC;;EAElC,MAAMC,aAAa,GAAG;IACpBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,OAAO;IACfC,UAAU,EAAG,kBAAiBL,KAAM,OAAMH,UAAW,MAAKI,cAAe,IAAGJ,UAAW,SAAQ;IAC/FS,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBD,QAAQ,EAAE,UAAU;IACpBE,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE,uBAAuB;IAClCC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE;EACd,CAAC;EAED,IAAIC,SAAS,CAAC,CAAC;;EAEf,IAAIjB,UAAU,IAAI,EAAE,EAAE;IACpBiB,SAAS,GAAG,SAAS,CAAC,CAAC;EACzB,CAAC,MAAM,IAAIjB,UAAU,IAAI,EAAE,EAAE;IAC3BiB,SAAS,GAAG,SAAS,CAAC,CAAC;EACzB,CAAC,MAAM;IACLA,SAAS,GAAG,SAAS,CAAC,CAAC;EACzB;;EAEAN,SAAS,CAACR,KAAK,GAAGc,SAAS;EAE3B,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BrB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAACE,KAAK,EAAEf;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvD1B,OAAA;MAAMoB,SAAS,EAAC,YAAY;MAACE,KAAK,EAAET,SAAU;MAAAQ,QAAA,GAAC,WAAS,EAACnB,UAAU,EAAC,GAAC;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV,CAAC;AAACC,EAAA,GAxCIxB,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}