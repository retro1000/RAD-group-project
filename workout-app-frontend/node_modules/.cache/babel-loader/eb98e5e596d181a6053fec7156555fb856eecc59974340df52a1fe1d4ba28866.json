{"ast":null,"code":"function validation(values) {\n  let error = [false, {}];\n  const firstname_pattern = /^[A-Za-z]+$/;\n  const lastname_pattern = /^[A-Za-z]+$/;\n  const email_pattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n  const contactno_pattern = /^0[0-9]{9}$/;\n  const username_pattern = /^[A-Za-z0-9_-]{5,}$/;\n  const password_pattern = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)[A-Za-z\\d!@#$%^&*()\\-_=+{};:,<.>]{8,}$/;\n  const age_pattern = /^\\d+$/;\n  if (values.email === '') {\n    error[1].email = \"Email should not be empty\";\n    error[0] = true;\n  } else if (!email_pattern.test(values.email)) {\n    error[1].email = \"Email didn't Match\";\n    error[0] = true;\n  }\n  if (values.first_name === '') {\n    error[1].first_name = \"firstname should not be empty\";\n    error[0] = true;\n  } else if (!firstname_pattern.test(values.first_name)) {\n    error[1].first_name = \"Firstname didn't Match\";\n    error[0] = true;\n  }\n  if (values.last_name === '') {\n    error[1].last_name = \"Lastname should not be empty\";\n    error[0] = true;\n  } else if (!lastname_pattern.test(values.last_name)) {\n    error[1].last_name = \"Lastname didn't Match\";\n    error[0] = true;\n  }\n  if (values.age === '') {\n    error[1].age = \"Age should not be empty\";\n    error[0] = true;\n  } else if (!age_pattern.test(values.age)) {\n    error[1].age = \"Age didn't Match\";\n    error[0] = true;\n  }\n  if (values.contact_no === '') {\n    error[1].contact_no = \"ContactNo should not be empty\";\n    error[0] = true;\n  } else if (!contactno_pattern.test(values.contact_no)) {\n    error[1].contact_no = \"ContactNo didn't Match\";\n    error[0] = true;\n  }\n  if (values.username === '') {\n    error[1].username = \"Username should not be empty\";\n    error[0] = true;\n  } else if (!username_pattern.test(values.username)) {\n    error[1].username = \"Username didn't Match\";\n    error[0] = true;\n  }\n  if (values.password === '') {\n    error[1].password = \"Password should not be empty\";\n    error[0] = true;\n  } else if (!password_pattern.test(values.password)) {\n    error[1].password = \"Password didn't Match\";\n    error[0] = true;\n  }\n  return error;\n}\nexport default validation;","map":{"version":3,"names":["validation","values","error","firstname_pattern","lastname_pattern","email_pattern","contactno_pattern","username_pattern","password_pattern","age_pattern","email","test","first_name","last_name","age","contact_no","username","password"],"sources":["C:/Users/damit/OneDrive/Desktop/workout_plans_web_app/workout-app-frontend/src/components/validation.jsx"],"sourcesContent":["function validation(values){\r\n    let error = [false, {}]\r\n    const firstname_pattern =/^[A-Za-z]+$/\r\n    const lastname_pattern =/^[A-Za-z]+$/\r\n    const email_pattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/\r\n    const contactno_pattern = /^0[0-9]{9}$/\r\n    const username_pattern = /^[A-Za-z0-9_-]{5,}$/\r\n    const password_pattern = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)[A-Za-z\\d!@#$%^&*()\\-_=+{};:,<.>]{8,}$/\r\n    const age_pattern = /^\\d+$/\r\n\r\n    if(values.email === ''){\r\n        error[1].email = \"Email should not be empty\"\r\n        error[0]=true\r\n    }\r\n\r\n    else if(!email_pattern.test(values.email)){\r\n        error[1].email = \"Email didn't Match\"\r\n        error[0]=true\r\n    }\r\n    \r\n    if(values.first_name === ''){\r\n        error[1].first_name = \"firstname should not be empty\"\r\n        error[0]=true\r\n    }\r\n\r\n    else if(!firstname_pattern.test(values.first_name)){\r\n        error[1].first_name = \"Firstname didn't Match\"\r\n        error[0]=true\r\n    }\r\n    if(values.last_name === ''){\r\n        error[1].last_name = \"Lastname should not be empty\"\r\n        error[0]=true\r\n    }\r\n\r\n    else if(!lastname_pattern.test(values.last_name)){\r\n        error[1].last_name = \"Lastname didn't Match\"\r\n        error[0]=true\r\n    }\r\n    if(values.age === ''){\r\n        error[1].age = \"Age should not be empty\"\r\n        error[0]=true\r\n    }\r\n\r\n    else if(!age_pattern.test(values.age)){\r\n        error[1].age = \"Age didn't Match\"\r\n        error[0]=true\r\n    }\r\n    if(values.contact_no === ''){\r\n        error[1].contact_no = \"ContactNo should not be empty\"\r\n        error[0]=true\r\n    }\r\n\r\n    else if(!contactno_pattern.test(values.contact_no)){\r\n        error[1].contact_no = \"ContactNo didn't Match\"\r\n        error[0]=true\r\n    }\r\n    if(values.username === ''){\r\n        error[1].username = \"Username should not be empty\"\r\n        error[0]=true\r\n    }\r\n\r\n    else if(!username_pattern.test(values.username)){\r\n        error[1].username = \"Username didn't Match\"\r\n        error[0]=true\r\n    }\r\n    if(values.password === ''){\r\n        error[1].password = \"Password should not be empty\"\r\n        error[0]=true\r\n    }\r\n\r\n    else if(!password_pattern.test(values.password)){\r\n        error[1].password = \"Password didn't Match\"\r\n        error[0]=true\r\n    }\r\n   \r\n    return error; \r\n  \r\n}\r\n\r\nexport default validation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}