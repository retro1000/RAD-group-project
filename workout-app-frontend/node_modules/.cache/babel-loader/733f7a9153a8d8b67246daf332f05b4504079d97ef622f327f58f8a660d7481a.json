{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damit\\\\OneDrive\\\\Desktop\\\\workout_plans_web_app\\\\workout-app-frontend\\\\src\\\\components\\\\bodyParts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../component_style/body_parts_style.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BodyParts(props) {\n  _s();\n  const [bodyPartsList, setBodyPartsList] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    props.handleLoading(true);\n    axios.get('http://localhost:6600/bodyParts', {\n      maxRedirects: 0\n    }).then(response => {\n      props.handleLoading(false);\n      if (response.status === 403) navigate('/login');\n      if (response.status === 200) setBodyPartsList(response.data);\n      if (response.status === 500) throw new Error('Internal server error');\n    }).catch(error => {\n      props.handleLoading(false);\n      console.error('Error fetching body parts:', Error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_frame\",\n    children: bodyPartsList.map(part => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item_item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: part.img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: part.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)]\n    }, part.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(BodyParts, \"vAoDGDP4CC4deC7GU/aR3g2Bbio=\", false, function () {\n  return [useNavigate];\n});\n_c = BodyParts;\nexport default BodyParts;\nvar _c;\n$RefreshReg$(_c, \"BodyParts\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","BodyParts","props","_s","bodyPartsList","setBodyPartsList","navigate","handleLoading","get","maxRedirects","then","response","status","data","Error","catch","error","console","className","children","map","part","src","img","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","id","_c","$RefreshReg$"],"sources":["C:/Users/damit/OneDrive/Desktop/workout_plans_web_app/workout-app-frontend/src/components/bodyParts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../component_style/body_parts_style.css';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction BodyParts(props) {\r\n    const [bodyPartsList, setBodyPartsList] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n            props.handleLoading(true);\r\n            axios.get('http://localhost:6600/bodyParts', {maxRedirects:0})\r\n                .then(response => {\r\n                    props.handleLoading(false);\r\n                    if(response.status === 403) navigate('/login');\r\n                    if(response.status === 200) setBodyPartsList(response.data);\r\n                    if(response.status === 500) throw new Error('Internal server error');\r\n                })\r\n                .catch(error => {\r\n                    props.handleLoading(false);\r\n                    console.error('Error fetching body parts:', Error);\r\n                });\r\n    }, []);\r\n\r\n    return (\r\n        <div className='main_frame'>\r\n            {\r\n                bodyPartsList.map(part => (\r\n                    <div className='item_item' key={part.id}>\r\n                        <img src={part.img} alt='' />\r\n                        <span>{part.name}</span>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BodyParts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,yCAAyC;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACRO,KAAK,CAACK,aAAa,CAAC,IAAI,CAAC;IACzBV,KAAK,CAACW,GAAG,CAAC,iCAAiC,EAAE;MAACC,YAAY,EAAC;IAAC,CAAC,CAAC,CACzDC,IAAI,CAACC,QAAQ,IAAI;MACdT,KAAK,CAACK,aAAa,CAAC,KAAK,CAAC;MAC1B,IAAGI,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAEN,QAAQ,CAAC,QAAQ,CAAC;MAC9C,IAAGK,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAEP,gBAAgB,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC3D,IAAGF,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;IACxE,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZd,KAAK,CAACK,aAAa,CAAC,KAAK,CAAC;MAC1BU,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEF,KAAK,CAAC;IACtD,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAEnBf,aAAa,CAACgB,GAAG,CAACC,IAAI,iBAClBrB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBnB,OAAA;QAAKsB,GAAG,EAAED,IAAI,CAACE,GAAI;QAACC,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7B5B,OAAA;QAAAmB,QAAA,EAAOE,IAAI,CAACQ;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAFIP,IAAI,CAACS,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGlC,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACzB,EAAA,CA/BQF,SAAS;EAAA,QAEGH,WAAW;AAAA;AAAAiC,EAAA,GAFvB9B,SAAS;AAiClB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}