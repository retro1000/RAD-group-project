{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damit\\\\OneDrive\\\\Desktop\\\\workout_plans_web_app\\\\workout-app-frontend\\\\src\\\\components\\\\bodyParts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react'; // Corrected import statement, added useState\nimport '../component_style/body_parts_style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BodyParts(props) {\n  _s();\n  const [bodyPartsList, setBodyPartsList] = useState([]); // Using state to store body parts list\n\n  useEffect(() => {\n    getParts(); // Call getParts function when component mounts\n  }, []);\n  const getParts = () => {\n    props.handleLoading(true); // Set loading to true before making the API call\n    axios.get('http://localhost:4080/workouts').then(response => {\n      props.handleLoading(false); // Set loading to false after API call\n      setBodyPartsList(response.data); // Update body parts list using state\n    }).catch(error => {\n      props.handleLoading(false); // Set loading to false on error as well\n      console.error('Error fetching body parts:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_frame\",\n    children: bodyPartsList.map(part => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item_item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: part.img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: part.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)]\n    }, part.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(BodyParts, \"JhvqnpWdeoyJVQ6iu4qWUtBfFq4=\");\n_c = BodyParts;\nexport default BodyParts;\nvar _c;\n$RefreshReg$(_c, \"BodyParts\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","BodyParts","props","_s","bodyPartsList","setBodyPartsList","getParts","handleLoading","get","then","response","data","catch","error","console","className","children","map","part","src","img","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","id","_c","$RefreshReg$"],"sources":["C:/Users/damit/OneDrive/Desktop/workout_plans_web_app/workout-app-frontend/src/components/bodyParts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'; // Corrected import statement, added useState\r\nimport '../component_style/body_parts_style.css';\r\nimport axios from 'axios';\r\n\r\nfunction BodyParts(props) {\r\n    const [bodyPartsList, setBodyPartsList] = useState([]); // Using state to store body parts list\r\n\r\n    useEffect(() => {\r\n        getParts(); // Call getParts function when component mounts\r\n    }, []);\r\n\r\n    const getParts = () => {\r\n        props.handleLoading(true); // Set loading to true before making the API call\r\n        axios.get('http://localhost:4080/workouts')\r\n            .then(response => {\r\n                props.handleLoading(false); // Set loading to false after API call\r\n                setBodyPartsList(response.data); // Update body parts list using state\r\n            })\r\n            .catch(error => {\r\n                props.handleLoading(false); // Set loading to false on error as well\r\n                console.error('Error fetching body parts:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='main_frame'>\r\n            {\r\n                bodyPartsList.map(part => (\r\n                    <div className='item_item' key={part.id}>\r\n                        <img src={part.img} alt='' />\r\n                        <span>{part.name}</span>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BodyParts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACpD,OAAO,yCAAyC;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExDD,SAAS,CAAC,MAAM;IACZU,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAGA,CAAA,KAAM;IACnBJ,KAAK,CAACK,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3BT,KAAK,CAACU,GAAG,CAAC,gCAAgC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAI;MACdR,KAAK,CAACK,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;MAC5BF,gBAAgB,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZX,KAAK,CAACK,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;MAC5BO,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACV,CAAC;EAED,oBACIb,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,EAEnBZ,aAAa,CAACa,GAAG,CAACC,IAAI,iBAClBlB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBhB,OAAA;QAAKmB,GAAG,EAAED,IAAI,CAACE,GAAI;QAACC,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7BzB,OAAA;QAAAgB,QAAA,EAAOE,IAAI,CAACQ;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAFIP,IAAI,CAACS,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGlC,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACtB,EAAA,CAhCQF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAkClB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}